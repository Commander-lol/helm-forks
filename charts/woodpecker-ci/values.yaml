imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
## clusterDns will be used by the agents to locate the server service
clusterDns: "svc.cluster.local"

## @section Common Values
## Configuration values shared by the server and agent pods
common:
  environment:
    ## A list of secrets that will be used to pull in environment variables.
    ## The secret should contain 1 or more key:value pairs, where the key
    ## matches a Woodpecker environment variable and the value is the value of
    ## that variable
    secrets: []
    # - myExistingSecret
    
    ## Environment variables to add to the pods that do not contain sensitive data.
    ## Any sensitive values should be provided through the above list of secrets
    variables: {}
      # WOODPECKER_ADMIN: user1,user2
      # OTHER_VAR: some_value

## @section Server Configuration
## The server provides the UI and C&C capabilities of the woodpecker instance
server:
  image:
    repository: woodpeckerci/woodpecker-server
    pullPolicy: IfNotPresent
    ## Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  ## Whether or not to enable the server component. If you have an existing woodpecker
  ## instance and are simply deploying agents, this can be disabled
  enabled: true

  ## Whether or not users can register to this instance of woodpecker. Orgs can be
  ## whitelisted via the WOODPECKER_ORGS environment variable
  registration: false

  ## Setting this to true will cause WOODPECKER_HOST to use https. If the ingress
  ## is also enabled, it will set up the TLS configuration for that ingress.
  ## The Ingress secret will be the chart deployment's full name suffixed with "-tls"
  tls: false

  ## The host that woodpecker will use for it's interface. If the ingress is enabled,
  ## this value will also be used to set up paths
  host: chart-example.local

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    paths:
      - path: /
        pathType: ImplementationSpecific

## @section Agent Configuration
## Agents run the actual build pipelines, and communicate back to the server instance.
## The amount of build parallelism is equal to R x P, where R is the number of replicas 
## (number of pods) and P is the parallelism of each pod (number of concurrent builds each
## pod is configured to handle)
agent:
  image:
    repository: woodpeckerci/woodpecker-agent
    pullPolicy: IfNotPresent
    ## Overrides the image tag whose default is the chart appVersion.
    tag: ""

  ## The number of agent pods to run 
  replicas: 4
  ## The number of jobs each pod will run concurrently
  parallelism: 4
  ## Properties related to the agent pod's docker-in-docker support
  dind:
    ## The image for the dind container
    image: docker:19.03.5-dind
    ## Resources for each agent's build runner
    resources:
      limits:
        cpu: 1
        memory: 2Gi

## @skip resources
resources: {}
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @skip serviceAccount
serviceAccount:
  ## Specifies whether a service account should be created
  create: true
  ## Annotations to add to the service account
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

## @skip podAnnotations
podAnnotations: {}

## @skip podSecurityContext
podSecurityContext: {}
  # fsGroup: 2000

## @skip securityContext
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## @skip nodeSelector
nodeSelector: {}

## @skip tolerations
tolerations: []

## @skip affinity
affinity: {}
